---
---
<div class="mt-5">
<h1 class="card-title block text-2xl text-center mb-5 font-bold">
    Selamat Menyambut Hari Raya
  </h1>
<div x-data="kartuNama()"  class="card  md:flex-row gap-5 w-full bg-base-100 shadow-md shadow-neutral-500/80 hover:shadow-lime-500/40">
    <img id="bgImageStory" src="templateStory.jpg" alt="Background Image for Story" style="display:none;">
    <img id="bgImageFeed" src="templateFeed.jpg" alt="Background Image for Feed" style="display:none;">
    <img id="bgImageStoryArabic" src="templateStoryArabic.jpg" alt="Background Image for Story" style="display:none;">
    <img id="bgImageFeedArabic" src="templateFeedArabic.jpg" alt="Background Image for Feed" style="display:none;">
    <div class="card-body m-45 w-full grid gap-8">
      
      <div class="card-actions justify-end">

		<input type="text" id="nama" name="nama" x-model="nama" @input="drawKartuNama()" placeholder="Tulis Namamu disini" class="input input-bordered input-secondary w-full" />
    
    <select id="size" x-model="size" @change="drawKartuNama()" class="custom-select select select-warning w-full " placeholder="Ukuran">
		<option disabled selected>Pilih Model Kartu</option>

        <option value="feed">Feed Indo</option>
        <option value="story">Story Indo</option>
        <option value="feedArab">Feed Arab</option>
        <option value="storyArab">Story Arab</option>
    </select>
      </div>
       <div class="flex gap-5">
        <button class="btn btn-success" id="unduhKartuNama" @click="unduhKartuNama()">Unduh</button>
        <button class="btn btn-primary" id="bagikanKartuNama" @click="bagikanKartuNama()">Bagikan</button>


       </div>
	</div>
    <figure class="w-full" style="margin-right: 45px;"> <canvas id="kartuNamaCanvas" width="300" height="150" style="border:1px solid #000000;">
    </canvas>
    <img id="previewKartuNama" src="/coloa.svg" alt="Preview Kartu Nama"></figure>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.28/webfontloader.js" integrity="sha512-v/wOVTkoU7mXEJC3hXnw9AA6v32qzpknvuUF6J2Lbkasxaxn2nYcl+HGB7fr/kChGfCqubVr1n2sq1UFu3Gh1w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script is:inline>
WebFont.load({
    google: {
        families: ['Poppins:800','Almarai:800']
    }
});

function kartuNama() {
    return {
        nama: '',
        size: 'feed',


        drawKartuNama() {
    const canvas = document.getElementById('kartuNamaCanvas');
    const ctx = canvas.getContext('2d');
    const bgImageStory = document.getElementById('bgImageStory');
    const bgImageFeed = document.getElementById('bgImageFeed');
    const bgImageStoryArabic = document.getElementById('bgImageStoryArabic');
    const bgImageFeedArabic = document.getElementById('bgImageFeedArabic');
    const { width, height } = this.getCanvasSize();

    canvas.width = width;
    canvas.height = height;

    ctx.clearRect(0, 0, width, height);

    switch (this.size) {
        case 'story':
            ctx.drawImage(bgImageStory, 0, 0, width, height);
            break;
        case 'feed':
            ctx.drawImage(bgImageFeed, 0, 0, width, height);
            break;
        case 'storyArab':
            ctx.drawImage(bgImageStoryArabic, 0, 0, width, height);
            break;
        case 'feedArab':
            ctx.drawImage(bgImageFeedArabic, 0, 0, width, height);
            break;
    }

// Buat objek gradien linear
const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);

// Tambahkan titik-titik warna (color stops) ke objek gradien
gradient.addColorStop(0, '#754B00');
gradient.addColorStop(0.2448, '#D48C0C');
gradient.addColorStop(0.4714, '#754B00');
gradient.addColorStop(0.7448, '#D48C0C');
gradient.addColorStop(1, '#754B00');

// Terapkan gradien pada ctx.fillStyle
ctx.fillStyle = gradient;
    
    ctx.font = this.size === 'story' ? '800 60px Poppins' :
           this.size === 'feed' ? '800 45px Poppins' :
           this.size === 'storyArab' ? '800 60px Almarai' :
           this.size === 'feedArab' ? '800 45px Almarai' :
           ''; // default value if none of the conditions match
ctx.textAlign = 'center';
ctx.textBaseline = 'top';
const paddingLeft = 530;
let paddingTop;

switch (this.size) {
case 'story':
    paddingTop = 1430;
    break;
case 'feed':
    paddingTop = 930;
    break;
case 'storyArab':
    paddingTop = 1570; // Adjust this value as needed
    break;
case 'feedArab':
    paddingTop = 970; // Adjust this value as needed
    break;
}

ctx.fillText(this.nama, paddingLeft, paddingTop);

this.updatePreview();
},
bagikanKartuNama() {
if (!navigator.share) {
alert('Fitur ini tidak didukung di peramban Anda.');
return;
}

this.updatePreview();
const canvas = document.getElementById('kartuNamaCanvas');
canvas.toBlob(async blob => {
try {
    await navigator.share({
        title: `${this.nama} - Kartu Tahniah`,
        text: 'تقبل الله منا و منكم :',
        files: [new File([blob], `${this.nama}.png`, { type: 'image/png' })],
    });
} catch (error) {
    console.error('Error saat berbagi kartu nama:', error);
    alert('Terjadi kesalahan saat berbagi kartu tahniah.');
}
}, 'image/png');
},
        unduhKartuNama() {
            this.updatePreview();
            const canvas = document.getElementById('kartuNamaCanvas');
            const link = document.createElement('a');
            link.href = canvas.toDataURL('image/png');
            link.download = `${this.nama}.png`;
            link.click();
        },
        getCanvasSize() {
    if (this.size === 'story' || this.size === 'storyArab') {
        return { width: 1080, height: 1920 };
    } else {
        return { width: 1080, height: 1080 };
    }
},
        updatePreview() {
            const canvas = document.getElementById('kartuNamaCanvas');
            const preview = document.getElementById('previewKartuNama');
            const scaleFactor = this.getPreviewScaleFactor();

            const tempCanvas = document.createElement('canvas');
            tempCanvas.width = canvas.width * scaleFactor;
            tempCanvas.height = canvas.height * scaleFactor;
            const tempCtx = tempCanvas.getContext('2d');
            tempCtx.drawImage(canvas, 0, 0, tempCanvas.width, tempCanvas.height);

            preview.src = tempCanvas.toDataURL('image/png');
        },
        getPreviewScaleFactor() {
            if (this.size === 'story' || this.size === 'storyArab') {
                return 0.25; // 50% dari ukuran asli
            } else {
                return 900 / 1080; // 400px lebar untuk IG Feed
            }
        },
    };
}
    </script>

<style>
input[type="text"] {
        padding: 5px 10px;
        margin: 5px 0;
        box-sizing: border-box;
    }
       

        #kartuNamaCanvas {
            max-width: 100%;
            height: auto;
            display: none;
            margin: 20px auto;
        }

        #previewKartuNama {
            max-width: 100%;
            height: auto;
            display: block;
            margin: 20px auto;
        }
        .custom-select::before {
        content: attr(placeholder);
        display: inline-block;
        margin-right: 0.5em;
        color: inherit;
        pointer-events: none;
    }</style>

